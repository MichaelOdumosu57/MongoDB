http://mongodb.github.io/node-mongodb-native/3.1/api/
http://mongodb.github.io/node-mongodb-native/3.1/tutorials/main/
http://mongodb.github.io/node-mongodb-native/3.1/quick-start/quick-start/
// refer here 


                              |
                            .'|'.
                           /.'|\ \
M O N G O D B              | /|'.|         
                            \ |\/
                             \|/
                              `
	__
  /    \
-   --  >   divdes sections
  \ __ /  

  __
> -- > tips
  --	

A mongoDB  document  is like a json object
they're swappable so far 

there is support for embedded data models 
indexes support faster queries 
powerful query language 
they have a replica set, which make data ready and available
there is support for multiple storage engines


                              |
                            .'|'.
                           /.'|\ \
M O N G O D B              | /|'.|         
                            \ |\/
                             \|/
                              `

Installing MongoDB
	__
  /    \
-   --  >
  \ __ /	
Install MongoDB Community Edition on Linux

	__
  /    \
-   --  >
  \ __ /	
Install MongoDB Community Edition on Ubuntu
	
	__
  /    \
-   --  >
  \ __ /	

MongoDB Version

MongoDB 4.0 Community 

Platform Support 16.04 & 18.04 LTS

  __
> -- >  MongoDB does not support WSL  https://github.com/Microsoft/WSL/issues/3286, https://github.com/Microsoft/WSL/issues/796
  --  
  __
> -- > 
  --

  __
> -- >  might have to update glibc package to glibc 2.23-0ubuntu5 if experiecing memory problems 
  --  

search archives [system] to see if its there
sudo apt remove mongodb and sudo apt purge mongodb to remove ubuntu mongodb which conflicts with the offical version

mongodb-org installs (metapackage)
	mongodb-org-server - containts the mongod daemon , configs and the init start script 
	mongodb-org-mongos  mongos daemon
	mongodb-org-shell - mongo shell 	
	mongodb-org-tools - mongoimport bsondump, mongodump, mongoexport, mongofiles, mongorestore, mongostat, and mongotop.


  __
> -- >  for MongoDB atlas , can start MongoDB instance on AWS, Azure, or GCP 
  --	



Steps  (refer to your journaling system )
	apt-get requires GPG to ensure security get the MongoDB GPG key
	Create a list file for MongoDB
		basically making a offical package link source for your package manager	
	Reload package manager database
	Install latest stable version
	problems? : https://docs.mongodb.com/manual/reference/installation-ubuntu-community-troubleshooting/#install-ubuntu-troubleshooting

Production : https://docs.mongodb.com/manual/administration/production-notes/
UNIX ulimit, your OS  limits how much resources software uses https://docs.mongodb.com/manual/reference/ulimit/


Directories
	check for /var/lib/mongodb and /var/log/mongodb they should exist
	they exist 
	MongoDB is run by the mongodb user
		if you change user running MongoDB you must change permissions for the relative dirs to be accessed


	__
  /    \
-   --  >
  \ __ /	

Starting MongoDB
	start[system]

	Verify that MongoDB has started successfully

	check the mongod.log [system]
		if file.find('waiting for connections on port 27017') there is nothing to worry about

	to stop
		stop [system]

	to restart
		restart[system]


	to use mongo 
		[system]				


	__
  /    \
-   --  >
  \ __ /	


Uninstall
	stop mongodb
	purge [system ]
	remove loaded dirs                               		


                              |
                            .'|'.
                           /.'|\ \
M O N G O D B              | /|'.|         
                            \ |\/
                             \|/
                              `

Verify Integrity of MongoDB Packages

	 check here and check PGP  signatures for future use before installing mongodb


                              |
                            .'|'.
                           /.'|\ \
M O N G O D B              | /|'.|         
                            \ |\/
                             \|/
                              `

Create an Atlas Free Tier Cluster

	its a cloud service for maintenace of scaled MongoDB instances 

	
		Create an Atlas user account.	                              	                               	
		Atlas Cluster (system)
		Create an Organization [system]
		Create a Project
			Projects manage related MongoDB deployments, or “clusters” in Atlas. 
		Add Members to the Project.
			clink on the link next to projects
		Create a cluster. (done for you initally)
		Setup security.
			Atlas requires clients to authenticate to access clusters
				From the Security tab, click MongoDB Users.
				Click Add New User.
				If you don’t have an Atlas admin user, 
					create an Atlas admin user: 
					enter the username and password and select Atlas admin for the 
					User Privileges. Otherwise, select the desired User Privileges.
					Select Add User.
				Repeat for additional users.
				From the Security tab, click IP Whitelist.
				Click Add IP Address. 
					You may either enter the IP address manually 
					in the Whitelist Entry field or 
					click the Add Current IP Address button.
				Click Confirm and wait for Atlas to update the firewall.		
				Download the connecting client.					
					npm init 
					npm install mongodb --save


				Click the Connect button from the Clusters view.

				Verify the IP address added earlier appears under
				the Check the IP Whitelist section. You may also add additional IP addresses via the Add Entry button.

				Click Connect Your Application.

				Specify which driver version you are using for the Copy a connection string section.
				https://docs.mongodb.com/ecosystem/drivers/driver-compatibility-reference/#node-js-driver-compatibility
				[system]


				Copy the URI Connection String to the clipboard.

				Paste the clipboard contents into your preferred text editor and replace
				 <PASSWORD> with the password for the user created earlier. 
				 	The sample connects to the test database which the following examples use. 
				If you wish to connect to a different database, change test to whichever database you wish to connect to.



  __
> -- >  sometimes Atlas chooses an random user, just replace the user
  --	
	

  __
> -- >  { useNewUrlParser: true } to help make sure the uri is taken, its will be deprecated but dev did something 
  -- 


				
                              |
                            .'|'.
                           /.'|\ \
M O N G O D B              | /|'.|         
                            \ |\/
                             \|/
                              `


Databases and Collections	
MongoDB stores BSON documents - data records in collections in databases 

to start 
	mongo 

select a database 
	use myDB

create  a database 
	use myNewDB (it auto create)
		db automatically refers to the database name in the shell
	db.myNewCollection1.insertOne( { x: 1 } )

{
creates db:insertOne()

creates collection : insertOne(), createIndex()
}

	creates db and collection if they dont exist 

}
	__
  /    \
-   --  >
  \ __ /

Collections	

	db.myNewCollection2.insertOne( { x: 1 } )
	db.myNewCollection3.createIndex( { y: 1 } )


Naming Restrictions:  https://docs.mongodb.com/manual/reference/limits/#restrictions-on-collection-names
	 

to make a collection with custom options 
 db.createCollection()

 	to modify see collMod https://docs.mongodb.com/manual/reference/command/collMod/#dbcmd.collMod

you can enforce document validation rules  during update and insert operations 	
Schema Validation: https://docs.mongodb.com/manual/core/schema-validation/


	__
  /    \
-   --  >
  \ __ /

Modifying Document Structure
	
	to change structure of documents update them 

		Collections are assigned an immuntable UUID 	 		 


	__
  /    \
-   --  >
  \ __ /



Unique Identifiers
	
	featureCompatibilityVersion - https://docs.mongodb.com/manual/reference/command/setFeatureCompatibilityVersion/#view-fcv


  __
> -- >  collections are assigned an immuntable UUID  to get  db.getCollectionInfos() 
  --


                              |
                            .'|'.
                           /.'|\ \
M O N G O D B              | /|'.|         
                            \ |\/
                             \|/
                              `

Views

  __
> -- >  Collation allows users to specify language-specific rules for string comparison, 
  --		such as rules for lettercase and accent marks.  
  

db.runCommand( { create: <view>, viewOn: <source>, pipeline: <pipeline> } )
db.runCommand( { create: <view>, viewOn: <source>, pipeline: <pipeline>, collation: <collation> } )
db.createView(<view>, <source>, <pipeline>, <collation> )
	
	you must create views in the same database as the soruce collection 

they are read only 

the following operations support views 

db.collection.find()
db.collection.findOne()
db.collection.aggregate()
db.collection.countDocuments()
db.collection.estimatedDocumentCount()
db.collection.count()
db.collection.distinct()	  




                              |
                            .'|'.
                           /.'|\ \
M O N G O D B              | /|'.|         
                            \ |\/
                             \|/
                              `

 `      O
N               D
        E
http://mongodb.github.io/node-mongodb-native/3.1/quick-start/quick-start/


connect to your app with Node 
FILE: Node_MongoDB/template_node_mongoDB.js


refer to README.md  and the given file for example manifestation

	__
  /    \
-   --  >
  \ __ /

Insert a Document  

the function in there actually has an object 
result Contains the result document from MongoDB
ops Contains the documents inserted with added _id fields
connection Contains the connection used to perform the insert

	__
  /    \
-   --  >
  \ __ /


Find a Document
	
This query returns all the documents in the documents collection.

	till  here
		FILE: Node_MongoDB/MongoDB_examples

